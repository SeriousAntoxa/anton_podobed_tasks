2) Map letters to number
Desc: Replace letters of word by their number in string
Note: case sensitivity is ignored so "bob", "Bob" and "BoB" will all return the same word pattern
Note: All words provided will be non-empty strings of alphabetic characters only
Given: “hello” 
Return: "0.1.2.2.3"
     assert.equal(wordPattern("hello"), "0.1.2.2.3");
     assert.equal(wordPattern("heLlo"), "0.1.2.2.3");
     assert.equal(wordPattern("helLo"), "0.1.2.2.3");
     assert.equal(wordPattern("Hippopotomonstrosesquippedaliophobia"), "0.1.2.2.3.2.3.4.3.5.3.6.7.4.8.3.7.9.7.10.11.1.2.2.9.12.13.14.1.3.2.0.3.15.1.13");


Solution:
let strNamb = (str) => {
  let result = [];
  let arr = str.toLowerCase().split("");
  let newArr = new Set(arr);
  let checkArr = [];
  for (key of newArr) {
    checkArr.push(key);
  }
  arr.forEach((item) => {
    let i = checkArr.findIndex((item2) => item2 === item);
    result.push(i);
  });
  return result
}